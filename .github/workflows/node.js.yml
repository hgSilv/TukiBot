# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

env:
  AWS_REGION: us-east-1                  # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: 789350531933.dkr.ecr.us-east-1.amazonaws.com           # set this to your Amazon ECR repository name
  ECS_SERVICE: MY_ECS_SERVICE                 # set this to your Amazon ECS service name
  ECS_CLUSTER: MY_ECS_CLUSTER                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: MY_ECS_TASK_DEFINITION # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: MY_CONTAINER_NAME           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition


jobs:
  build:
  
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:

    - name: Checkout
      uses: actions/checkout@v2


    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2 #Setting up node
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - run: echo "------------------Build Stage-------------------------"
    - run: npm ci

    # AWS--------------------------------------------
    - name: Configure AWS credentials
      run: |
        mkdir .aws
        cd .aws
        echo "[default]
        aws_access_key_id=ASIA3PSHVINO6TVQ7AFS
        aws_secret_access_key=Yr393QZpj1/3Tjl9mNp6zguwNRb1n5gqSAPIUZDp
        aws_session_token=FwoGZXIvYXdzEA0aDClQMz9HkgYh8TzN2SLGAbYmKFPPsEAfe276XC65C0FN/RGkB6wTxNlc3VGIL11v901SdEcVwiHgt+Mq4Os+zcZjI54SHrNesg7X8WssupkweDck6T6mTYIZAga0d/OjvinKs7Q94c4DBKUraXPX1L5BXDHgihiPuxA7O3tzm8JOb2fycI4IjsE2WcQFF6myPDySWAzL/wY8LghExvaVR9Mu055ukLr5XxnLSnK+pejNMLEW7LI4Fj3Pu4qgjKe1j/YegHUBgJB/ByM2BaOai4xz3WBouyjMqo+NBjItxV2KXE8L6pwANmwMU/+VBgeJxHghx1+l/bXcGS+YC93R2NDvQ+wdOsnD5cAh" > credentials
        echo "[default]
        region = us-east-1
        output = json
        " > config
        ls -la
        cat credentials
        cat config
     # with:
      #  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
       # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    #Docker
    - name: Build image
      id: build-image
      env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
      run: docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    - run: docker images



  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: echo "---------------Deploy stage---------------------"
